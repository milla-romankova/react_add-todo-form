{"version":3,"sources":["api/users.js","api/todos.js","components/Todo/Todo.js","components/TodoList/TodoList.js","components/NewTodoForm/NewTodoForm.js","App.js","index.js"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","Todo","user","className","TodoList","map","todo","key","NewTodoForm","state","errors","handleChange","event","target","value","regExp","setState","replace","handleSubmit","props","onAdd","preventDefault","trim","foundUser","find","this","onSubmit","htmlFor","onChange","type","placeholder","React","Component","preparedTodos","todosFromServer","person","App","addTodo","newTodoTitle","newTodo","length","ReactDOM","render","document","getElementById"],"mappings":"wTAyOeA,EAzOD,CACZ,CACEC,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,wBACPC,QAAS,gBACTC,QAAS,CACPb,KAAM,kBACNc,YAAa,yCACbC,GAAI,gCAGR,CACEhB,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,gBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,sBACPC,QAAS,gBACTC,QAAS,CACPb,KAAM,eACNc,YAAa,iCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,qBACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,YACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,iBACPC,QAAS,cACTC,QAAS,CACPb,KAAM,qBACNc,YAAa,oCACbC,GAAI,oCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,4BACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,WACTC,QAAS,CACPb,KAAM,gBACNc,YAAa,2CACbC,GAAI,yCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,2BACPC,QAAS,CACPC,OAAQ,eACRC,MAAO,YACPC,KAAM,aACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,gBACPC,QAAS,eACTC,QAAS,CACPb,KAAM,cACNc,YAAa,uCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,WACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,uBACPC,QAAS,UACTC,QAAS,CACPb,KAAM,oBACNc,YAAa,qCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,YACRC,MAAO,YACPC,KAAM,YACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,WACTC,QAAS,CACPb,KAAM,cACNc,YAAa,qCACbC,GAAI,kCAGR,CACEhB,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,uBACPC,QAAS,CACPC,OAAQ,mBACRC,MAAO,YACPC,KAAM,YACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,eACTC,QAAS,CACPb,KAAM,kBACNc,YAAa,gCACbC,GAAI,kCAGR,CACEhB,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,aACRC,MAAO,YACPC,KAAM,iBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,uBACPC,QAAS,aACTC,QAAS,CACPb,KAAM,gBACNc,YAAa,wCACbC,GAAI,qCAGR,CACEhB,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,kBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,cACTC,QAAS,CACPb,KAAM,aACNc,YAAa,oCACbC,GAAI,8BCnNKC,EAfD,CACZ,CACEC,OAAQ,EACRlB,GAAI,EACJmB,MAAO,qBACPC,WAAW,GAEb,CACEF,OAAQ,EACRlB,GAAI,EACJmB,MAAO,qCACPC,WAAW,ICRFC,G,MAAO,SAAC,GAAD,IAAGF,EAAH,EAAGA,MAAOC,EAAV,EAAUA,UAAWE,EAArB,EAAqBA,KAArB,OAClB,yBAAKC,UAAU,QACb,2BAAID,EAAKrB,MACT,uBAAGsB,UAAU,cAAcJ,GAC1BC,EACG,0BAAMG,UAAU,uBAAhB,aACA,0BAAMA,UAAU,oBAAhB,kBCNKC,EAAW,SAAC,GAAD,IAAGP,EAAH,EAAGA,MAAH,OACtB,wBAAIM,UAAU,cACXN,EAAMQ,KAAI,SAAAC,GAAI,OACb,wBACEC,IAAKD,EAAK1B,GACVuB,UAAU,oEAIV,kBAAC,EAASG,S,OCTLE,G,MAAb,4MACEC,MAAM,CACJ3B,SAAU,GACViB,MAAO,GACPW,OAAQ,CACNX,OAAO,EACPjB,UAAU,IANhB,EAUE6B,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBhC,EADgB,EAChBA,KAAMiC,EADU,EACVA,MACRC,EAAS,UAEf,EAAKC,UAAS,SAAAP,GAAK,gCAChB5B,EAAOiC,EAAMG,QAAQF,EAAQ,KADb,kDAGZN,EAAMC,QAHM,kBAId7B,GAAO,KAJO,MAdvB,EAuBEqC,aAAe,SAACN,GAAW,IAAD,EACI,EAAKH,MAAzBV,EADgB,EAChBA,MAAOjB,EADS,EACTA,SADS,EAEC,EAAKqC,MAAtBC,EAFgB,EAEhBA,MAAOzC,EAFS,EAETA,MAsBf,GApBAiC,EAAMS,iBAEDtB,EAAMuB,QACT,EAAKN,UAAS,SAAAP,GAAK,MAAK,CACtBC,OAAO,2BACFD,EAAMC,QADL,IAEJX,OAAO,QAKRjB,GACH,EAAKkC,UAAS,SAAAP,GAAK,MAAK,CACtBC,OAAO,2BACFD,EAAMC,QADL,IAEJ5B,UAAU,QAKZiB,GAASjB,EAAU,CACrB,IAAMyC,EAAY5C,EAAM6C,MAAK,SAAAtB,GAAI,OAAIA,EAAKrB,OAASC,KAEnD,EAAKkC,SAAS,CACZjB,MAAO,GACPjB,SAAU,KAGZsC,EAAMrB,EAAOwB,KAvDnB,uDA2DY,IAAD,EAC6BE,KAAKhB,MAAjCC,EADD,EACCA,OAAQX,EADT,EACSA,MAAOjB,EADhB,EACgBA,SACfH,EAAU8C,KAAKN,MAAfxC,MAER,OACE,yBAAKwB,UAAU,QACb,0BACEuB,SAAUD,KAAKP,cAEf,yBAAKf,UAAU,0BACb,2BAAOwB,QAAQ,WAAWxB,UAAU,oBAApC,YAGA,4BACEtB,KAAK,WACLD,GAAG,WACHuB,UAAU,eACVW,MAAOhC,EACP8C,SAAUH,KAAKd,cAEf,iDACChC,EAAM0B,KAAI,SAAAH,GAAI,OACb,4BACEK,IAAKL,EAAKtB,GACVkC,MAAOZ,EAAKrB,MAEXqB,EAAKrB,UAKX6B,EAAO5B,UACH,uBAAGqB,UAAU,eAAb,0BAIP,yBAAKA,UAAU,qCACb,2BAAOwB,QAAQ,UAAUxB,UAAU,oBAAnC,YAGA,2BACE0B,KAAK,OACLhD,KAAK,QACLD,GAAG,UACHuB,UAAU,eACV2B,YAAY,aACZhB,MAAOf,EACP6B,SAAUH,KAAKd,eAGhBD,EAAOX,OACH,uBAAGI,UAAU,eAAb,4BAIP,4BACE0B,KAAK,SACL1B,UAAU,qBAFZ,aAlHV,GAAiC4B,IAAMC,YCKjCC,G,MAAgBC,EAAgB7B,KAAI,SAAAC,GAAI,kCACzCA,GADyC,IAE5CJ,KAAMvB,EAAM6C,MAAK,SAAAW,GAAM,OAAIA,EAAOvD,KAAO0B,EAAKR,gBAwCjCsC,E,4MApCb3B,MAAQ,CACNZ,MAAOoC,G,EAGTI,QAAU,SAACC,EAAcpC,GACvB,EAAKc,UAAS,SAACP,GACb,IAAM8B,EAAU,CACdzC,OAAQI,EAAKtB,GACbA,GAAI6B,EAAMZ,MAAM2C,OAAS,EACzBzC,MAAOuC,EACPtC,WAAW,EACXE,QAGF,MAAO,CAAEL,MAAM,GAAD,mBAAMY,EAAMZ,OAAZ,CAAmB0C,S,uDAI3B,IACA1C,EAAU4B,KAAKhB,MAAfZ,MAER,OACE,yBAAKM,UAAU,iBACb,wBAAIA,UAAU,cAAd,iBAEA,kBAAC,EAAD,CACExB,MAAOA,EACPyC,MAAOK,KAAKY,UAGd,kBAAC,EAAD,CAAUxC,MAAOA,S,GA/BPkC,IAAMC,WCXxBS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5b9c125f.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Todo.css';\n\nexport const Todo = ({ title, completed, user }) => (\n  <div className=\"todo\">\n    <p>{user.name}</p>\n    <p className=\"todo__text\">{title}</p>\n    {completed\n      ? <span className=\"badge badge-success\">Completed</span>\n      : <span className=\"badge badge-info\">In progress</span>\n    }\n  </div>\n);\n\nTodo.propTypes = {\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Todo } from '../Todo';\n\nexport const TodoList = ({ todos }) => (\n  <ul className=\"list-group\">\n    {todos.map(todo => (\n      <li\n        key={todo.id}\n        className=\"list-group-item\n          list-group-item-action\n          list-group-item-secondary\"\n      >\n        <Todo {...todo} />\n      </li>\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewTodoForm.css';\n\nexport class NewTodoForm extends React.Component {\n  state={\n    username: '',\n    title: '',\n    errors: {\n      title: false,\n      username: false,\n    },\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    const regExp = /[^\\w ]+/;\n\n    this.setState(state => ({\n      [name]: value.replace(regExp, ''),\n      errors: {\n        ...state.errors,\n        [name]: false,\n      },\n    }));\n  }\n\n  handleSubmit = (event) => {\n    const { title, username } = this.state;\n    const { onAdd, users } = this.props;\n\n    event.preventDefault();\n\n    if (!title.trim()) {\n      this.setState(state => ({\n        errors: {\n          ...state.errors,\n          title: true,\n        },\n      }));\n    }\n\n    if (!username) {\n      this.setState(state => ({\n        errors: {\n          ...state.errors,\n          username: true,\n        },\n      }));\n    }\n\n    if (title && username) {\n      const foundUser = users.find(user => user.name === username);\n\n      this.setState({\n        title: '',\n        username: '',\n      });\n\n      onAdd(title, foundUser);\n    }\n  }\n\n  render() {\n    const { errors, title, username } = this.state;\n    const { users } = this.props;\n\n    return (\n      <div className=\"form\">\n        <form\n          onSubmit={this.handleSubmit}\n        >\n          <div className=\"form__input form-group\">\n            <label htmlFor=\"username\" className=\"font-weight-bold\">\n              Username\n            </label>\n            <select\n              name=\"username\"\n              id=\"username\"\n              className=\"form-control\"\n              value={username}\n              onChange={this.handleChange}\n            >\n              <option>Choose a user</option>\n              {users.map(user => (\n                <option\n                  key={user.id}\n                  value={user.name}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n\n            {errors.username\n              && <p className=\"text-danger\">Please, choose a user</p>\n            }\n          </div>\n\n          <div className=\"form__input form-group card-title\">\n            <label htmlFor=\"newtodo\" className=\"font-weight-bold\">\n              New todo\n            </label>\n            <input\n              type=\"text\"\n              name=\"title\"\n              id=\"newtodo\"\n              className=\"form-control\"\n              placeholder=\"todo title\"\n              value={title}\n              onChange={this.handleChange}\n            />\n\n            {errors.title\n              && <p className=\"text-danger\">Please, enter the title</p>\n            }\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-dark w-50\"\n          >\n            Add\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nNewTodoForm.propTypes = {\n  users: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired).isRequired,\n  onAdd: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport users from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { NewTodoForm } from './components/NewTodoForm';\n\nimport './App.css';\n\nconst preparedTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: users.find(person => person.id === todo.userId),\n}));\n\nclass App extends React.Component {\n  state = {\n    todos: preparedTodos,\n  }\n\n  addTodo = (newTodoTitle, user) => {\n    this.setState((state) => {\n      const newTodo = {\n        userId: user.id,\n        id: state.todos.length + 1,\n        title: newTodoTitle,\n        completed: false,\n        user,\n      };\n\n      return { todos: [...state.todos, newTodo] };\n    });\n  }\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <div className=\"App container\">\n        <h1 className=\"app__title\">Add todo form</h1>\n\n        <NewTodoForm\n          users={users}\n          onAdd={this.addTodo}\n        />\n\n        <TodoList todos={todos} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}